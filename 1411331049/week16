#include <iostream>
#include <string>
using namespace std;

// Aircraft class
class FlightObject {
private:
    string name; // Name of the aircraft
    int id;      // Aircraft ID
    int pilot;   // Number of pilots
    float kerosene; // Amount of kerosene (fuel used by the aircraft)

public:
    // Constructor for FlightObject class to set up aircraft data
    FlightObject() {
        cout << "Executing the constructor of the base class FlightObject\n";
        cout << "Setting up an aircraft:\n";
        cout << "Name: ";
        cin >> name;
        cout << "ID: ";
        cin >> id;
        cout << "Number of pilots: ";
        cin >> pilot;
        cout << "Kerosene amount (liters): ";
        cin >> kerosene;
    }

    // Destructor for FlightObject class
    ~FlightObject() {
        cout << "Executing the destructor of the base class FlightObject.\n";
    }

    // Display the aircraft's data
    void display() {
        cout << "\nAircraft name: " << name << endl;
        cout << "ID: " << id << endl;
        cout << "Number of pilots: " << pilot << endl;
        cout << "Kerosene amount (liters): " << kerosene << endl;
    }
};

// Airliner class (inherits from FlightObject)
class Airliner : public FlightObject {
private:
    int passenger;  // Number of passengers
    int service_person;  // Number of service staff

public:
    // Constructor for Airliner class to set up airliner data
    Airliner() {
        cout << "\nExecuting the constructor of the subclass Airliner\n";
        cout << "Number of passengers: ";
        cin >> passenger;
        cout << "Number of service staff: ";
        cin >> service_person;
    }

    // Destructor for Airliner class
    ~Airliner() {
        cout << "Executing the destructor of the subclass Airliner.\n";
    }

    // Display the airliner's data
    void display_airliner() {
        cout << "Number of passengers: " << passenger << endl;
        cout << "Number of service staff: " << service_person << endl;
    }
};

int main() {
    Airliner air1;
    air1.display();         // Display the base class (aircraft) data
    air1.display_airliner(); // Display the airliner-specific data

    return 0;
}
